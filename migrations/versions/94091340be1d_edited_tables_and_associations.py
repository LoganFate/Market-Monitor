"""Edited tables and associations

Revision ID: 94091340be1d
Revises: b2dbf5f00ab4
Create Date: 2024-02-28 15:11:42.816608

"""
from alembic import op
import sqlalchemy as sa
import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")


# revision identifiers, used by Alembic.
revision = '94091340be1d'
down_revision = 'b2dbf5f00ab4'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    if environment == "production" and SCHEMA:
        # Ensure the schema exists
        op.execute(f"CREATE SCHEMA IF NOT EXISTS {SCHEMA};")
    op.create_table('articles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('author', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stocks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('symbol')
    )
    op.create_table('user_pinned',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('article_id', sa.String(length=255), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['article_id'], ['articles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'article_id')
    )
    op.create_table('user_watchlist',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('stock_id', sa.Integer(), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['stock_id'], ['stocks.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'stock_id')
    )
    op.drop_table('article')
    op.drop_table('watchlist')
    op.drop_table('stock')
    op.drop_table('watchlist_stocks')
    # ### end Alembic commands ###

if environment == "production":
        op.execute(f"ALTER TABLE articles SET SCHEMA {SCHEMA};")
if environment == "production":
        op.execute(f"ALTER TABLE stocks SET SCHEMA {SCHEMA};")
if environment == "production":
        op.execute(f"ALTER TABLE user_pinned SET SCHEMA {SCHEMA};")
if environment == "production":
        op.execute(f"ALTER TABLE user_watchlist SET SCHEMA {SCHEMA};")


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('watchlist_stocks',
    sa.Column('watchlist_id', sa.INTEGER(), nullable=False),
    sa.Column('stock_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['stock_id'], ['stock.id'], ),
    sa.ForeignKeyConstraint(['watchlist_id'], ['watchlist.id'], ),
    sa.PrimaryKeyConstraint('watchlist_id', 'stock_id')
    )
    op.create_table('stock',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('symbol', sa.VARCHAR(length=10), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('price', sa.FLOAT(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('symbol')
    )
    op.create_table('watchlist',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('article',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), nullable=False),
    sa.Column('content', sa.TEXT(), nullable=False),
    sa.Column('author', sa.VARCHAR(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('user_watchlist')
    op.drop_table('user_pinned')
    op.drop_table('stocks')
    op.drop_table('articles')
    # ### end Alembic commands ###
