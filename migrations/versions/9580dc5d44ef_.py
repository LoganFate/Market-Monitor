"""empty message

Revision ID: 9580dc5d44ef
Revises:
Create Date: 2024-03-01 16:09:35.129040

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9580dc5d44ef'
down_revision = None
branch_labels = None
depends_on = None
import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    if SCHEMA:
        op.execute(f'CREATE SCHEMA IF NOT EXISTS {SCHEMA}')

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=40), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('user_about', sa.Text(), nullable=True),
    sa.Column('profile_pic', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username'),
    schema=SCHEMA
    )

    op.create_table('articles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('author', sa.String(length=100), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema=SCHEMA
    )
    op.create_table('stocks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('market_cap', sa.Float(), nullable=False),
    sa.Column('pe_ratio', sa.Float(), nullable=False),
    sa.Column('sector', sa.String(length=50), nullable=False),
    sa.Column('previous_close', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('symbol'),
    schema=SCHEMA
    )

    op.create_table('comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('article_id', sa.String(length=255), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['article_id'], ['articles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema=SCHEMA
    )
    op.create_table('notes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('stock_id', sa.Integer(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['stock_id'], ['stocks.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema=SCHEMA
    )
    op.create_table('pinned',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('article_id', sa.Integer(), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['article_id'], ['articles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema=SCHEMA
    )
    op.create_table('planner',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema=SCHEMA
    )
    op.create_table('watchlist',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('stock_id', sa.Integer(), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['stock_id'], ['stocks.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema=SCHEMA
    )
    # ### end Alembic commands ###

    if environment == "production":
        op.execute(f"ALTER TABLE articles, SET SCHEMA {SCHEMA}")
        op.execute(f"ALTER TABLE stocks, SET SCHEMA {SCHEMA}")
        op.execute(f"ALTER TABLE users, SET SCHEMA {SCHEMA}")
        op.execute(f"ALTER TABLE comments, SET SCHEMA {SCHEMA}")
        op.execute(f"ALTER TABLE notes, SET SCHEMA {SCHEMA}")
        op.execute(f"ALTER TABLE pinned, SET SCHEMA {SCHEMA}")
        op.execute(f"ALTER TABLE planner, SET SCHEMA {SCHEMA}")
        op.execute(f"ALTER TABLE users, SET SCHEMA {SCHEMA}")


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('watchlist', schema=SCHEMA)
    op.drop_table('planner', schema=SCHEMA)
    op.drop_table('pinned', schema=SCHEMA)
    op.drop_table('notes', schema=SCHEMA)
    op.drop_table('comments', schema=SCHEMA)
    op.drop_table('stocks', schema=SCHEMA)
    op.drop_table('articles', schema=SCHEMA)
    op.drop_table('users', schema=SCHEMA)
    # ### end Alembic commands ###
